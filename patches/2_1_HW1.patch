Index: src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -22,6 +22,22 @@
         this.exceed = exceed;
     }
 
+    public LocalDateTime getDateTime() {
+        return dateTime;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public int getCalories() {
+        return calories;
+    }
+
+    public boolean isExceed() {
+        return exceed;
+    }
+
     @Override
     public String toString() {
         return "UserMealWithExceed{" +
Index: src/main/java/ru/javawebinar/topjava/util/TimeUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/TimeUtil.java	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ src/main/java/ru/javawebinar/topjava/util/TimeUtil.java	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -1,13 +1,21 @@
 package ru.javawebinar.topjava.util;
 
+import java.time.LocalDateTime;
 import java.time.LocalTime;
+import java.time.format.DateTimeFormatter;
 
 /**
  * GKislin
  * 07.01.2015.
  */
 public class TimeUtil {
+    public static final DateTimeFormatter DATE_TME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
+
     public static boolean isBetween(LocalTime lt, LocalTime startTime, LocalTime endTime) {
         return lt.compareTo(startTime) >= 0 && lt.compareTo(endTime) <= 0;
+    }
+
+    public static String toString(LocalDateTime ldt) {
+        return ldt == null ? "" : ldt.format(DATE_TME_FORMATTER);
     }
 }
Index: src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -15,19 +15,26 @@
  * 31.05.2015.
  */
 public class UserMealsUtil {
-    public static void main(String[] args) {
-        List<UserMeal> mealList = Arrays.asList(
+    public static final List<UserMeal> MEAL_LIST = Arrays.asList(
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 10, 0), "Завтрак", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 13, 0), "Обед", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 20, 0), "Ужин", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 10, 0), "Завтрак", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 13, 0), "Обед", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 20, 0), "Ужин", 510)
-        );
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 10, 0), "Завтрак", 500),
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 13, 0), "Обед", 1000),
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 30, 20, 0), "Ужин", 500),
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 10, 0), "Завтрак", 1000),
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 13, 0), "Обед", 500),
+            new UserMeal(LocalDateTime.of(2015, Month.MAY, 31, 20, 0), "Ужин", 510)
+    );
-        List<UserMealWithExceed> filteredMealsWithExceeded = getFilteredWithExceeded(mealList, LocalTime.of(7, 0), LocalTime.of(12, 0), 2000);
+
+    public static final int DEFAULT_CALORIES_PER_DAY = 2000;
+
+    public static void main(String[] args) {
+        List<UserMealWithExceed> filteredMealsWithExceeded = getFilteredWithExceeded(MEAL_LIST, LocalTime.of(7, 0), LocalTime.of(12, 0), DEFAULT_CALORIES_PER_DAY);
         filteredMealsWithExceeded.forEach(System.out::println);
 
-        System.out.println(getFilteredWithExceededByCycle(mealList, LocalTime.of(7, 0), LocalTime.of(12, 0), 2000));
+        System.out.println(getFilteredWithExceededByCycle(MEAL_LIST, LocalTime.of(7, 0), LocalTime.of(12, 0), DEFAULT_CALORIES_PER_DAY));
+    }
+
+    public static List<UserMealWithExceed> getWithExceeded(List<UserMeal> mealList, int caloriesPerDay) {
+        return getFilteredWithExceeded(mealList, LocalTime.MIN, LocalTime.MAX, caloriesPerDay);
     }
 
     public static List<UserMealWithExceed> getFilteredWithExceeded(List<UserMeal> mealList, LocalTime startTime, LocalTime endTime, int caloriesPerDay) {
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/MealServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
+++ src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -0,0 +1,25 @@
+package ru.javawebinar.topjava.web;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import ru.javawebinar.topjava.util.UserMealsUtil;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+/**
+ * User: gkislin
+ * Date: 19.08.2014
+ */
+public class MealServlet extends HttpServlet {
+    private static final Logger LOG = LoggerFactory.getLogger(MealServlet.class);
+
+    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+        LOG.info("getAll");
+        request.setAttribute("mealList", UserMealsUtil.getWithExceeded(UserMealsUtil.MEAL_LIST, UserMealsUtil.DEFAULT_CALORIES_PER_DAY));
+        request.getRequestDispatcher("/mealList.jsp").forward(request, response);
+    }
+}
Index: src/main/webapp/WEB-INF/tld/functions.tld
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/tld/functions.tld	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
+++ src/main/webapp/WEB-INF/tld/functions.tld	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<taglib version="2.1"
+        xmlns="http://java.sun.com/xml/ns/javaee"
+        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd">
+
+    <tlib-version>1.0</tlib-version>
+    <short-name>functions</short-name>
+    <uri>http://topjava.javawebinar.ru/functions</uri>
+
+    <function>
+        <name>formatDateTime</name>
+        <function-class>ru.javawebinar.topjava.util.TimeUtil</function-class>
+        <function-signature>java.lang.String toString(java.time.LocalDateTime)</function-signature>
+    </function>
+</taglib>
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/web.xml	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ src/main/webapp/WEB-INF/web.xml	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -15,4 +15,14 @@
         <url-pattern>/users</url-pattern>
     </servlet-mapping>
 
+    <servlet>
+        <servlet-name>mealServlet</servlet-name>
+        <servlet-class>ru.javawebinar.topjava.web.MealServlet</servlet-class>
+        <load-on-startup>0</load-on-startup>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>mealServlet</servlet-name>
+        <url-pattern>/meals</url-pattern>
+    </servlet-mapping>
+
 </web-app>
Index: src/main/webapp/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/index.html	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ src/main/webapp/index.html	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -9,6 +9,7 @@
 <hr>
 <ul>
     <li><a href="users">User List</a></li>
+    <li><a href="meals">Meal List</a></li>
 </ul>
 </body>
 </html>
Index: src/main/webapp/mealList.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/mealList.jsp	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
+++ src/main/webapp/mealList.jsp	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -0,0 +1,46 @@
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
+<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
+<%@ taglib prefix="fn" uri="http://topjava.javawebinar.ru/functions" %>
+<html>
+<head>
+    <title>Meal list</title>
+    <style>
+        .normal {
+            color: green;
+        }
+
+        .exceeded {
+            color: red;
+        }
+    </style>
+</head>
+<body>
+<section>
+    <h2><a href="index.html">Home</a></h2>
+    <h3>Meal list</h3>
+    <hr>
+    <table border="1" cellpadding="8" cellspacing="0">
+        <thead>
+        <tr>
+            <th>Date</th>
+            <th>Description</th>
+            <th>Calories</th>
+        </tr>
+        </thead>
+        <c:forEach items="${mealList}" var="meal">
+            <jsp:useBean id="meal" scope="page" type="ru.javawebinar.topjava.model.UserMealWithExceed"/>
+            <tr class="${meal.exceed ? 'exceeded' : 'normal'}">
+                <td>
+                        <%--${meal.dateTime.toLocalDate()} ${meal.dateTime.toLocalTime()}--%>
+                        <%--<%=TimeUtil.toString(meal.getDateTime())%>--%>
+                        ${fn:formatDateTime(meal.dateTime)}
+                </td>
+                <td>${meal.description}</td>
+                <td>${meal.calories}</td>
+            </tr>
+        </c:forEach>
+    </table>
+</section>
+</body>
+</html>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision 2c8ba27e36b2266486b66b4594b4572c7b5a24c1)
+++ pom.xml	(revision 7dd935c232786b2c0ed22155f9556016d9ca168d)
@@ -67,6 +67,11 @@
             <scope>runtime</scope>
         </dependency>
 
+        <dependency>
+            <groupId>javax.servlet</groupId>
+            <artifactId>jstl</artifactId>
+            <version>1.2</version>
+        </dependency>
         <!--Web-->
         <dependency>
             <groupId>javax.servlet</groupId>
